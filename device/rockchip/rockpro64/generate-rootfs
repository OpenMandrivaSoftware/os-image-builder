if [ "$USE_SYSTEMD_UEFI" = 'no' ] || [ -z "$USE_SYSTEMD_UEFI" ]; then
    export KERNELVERSION="$(ls --sort=time "$OURDIR/$ROOTDIR"/boot/vmlinuz-* 2>/dev/null|head -n1 |sed -e 's,.*vmlinuz-,,')"

    [ ! -e "${OURDIR}/${ROOTDIR}"/dtb/${DTB} ] && install -D -m644  "${OURDIR}/${ROOTDIR}"/boot/dtb-*/${DTB}.dtb "${OURDIR}/${ROOTDIR}"/boot/${DTB}.dtb
    . ${OURDIR}/device/rockchip/generic/generate-rootfs
else
    MINSIZE=$(du -s --block-size=1048576 "$OURDIR/$ROOTDIR" |awk '{ print $1; }')
    dd if=/dev/zero of=${OURDIR}/results/${BASENAME}.img bs=1M count=$((MINSIZE+512))
    losetup -D
    losetup -fP ${OURDIR}/results/${BASENAME}.img
    LOOPDEV=$(losetup -j ${OURDIR}/results/${BASENAME}.img |cut -d: -f1)

# create initial paritions layout based on this http://opensource.rock-chips.com/wiki_Partitions
    parted --script "${LOOPDEV}" \
	mklabel gpt \
	mkpart 1 ext4 8MiB 12MiB \
	mkpart 2 fat32 12MiB 256MiB \
	mkpart 3 ext4 256MiB 100% \
	set 2 esp on

# create partition for EFI
    mkfs.vfat -F 32 -n OMVBOOT "${LOOPDEV}p2"
    BOOTUUID=$(/sbin/blkid "${LOOPDEV}p2" |sed -e 's,.* UUID=",,;s,".*,,')

# create partition for OMV
    mkfs.ext4 -L OMVAA64 "${LOOPDEV}p3"
    ROOTUUID=$(/sbin/blkid "${LOOPDEV}p3" |sed -e 's,.* UUID=",,;s,".*,,')

    sleep 1

    [ -d ${OURDIR}/mnt ] && umount -Rq ${OURDIR}/mnt
    [ -d ${OURDIR}/mnt ] && rm -rf ${OURDIR}/mnt
    mkdir ${OURDIR}/mnt

# installing ouf EFI files on ESP
    printf '%s\n' "Installing ESP files."
    mount "${LOOPDEV}p2" ${OURDIR}/mnt
    cd ${OURDIR}/mnt
	tar xf ${OURDIR}/boot-${SHORTTARGET}.tar.xz
    cd ..
    umount -R ${OURDIR}/mnt
    sleep 5

# install OpenMandriva distribution
    mount ${LOOPDEV}p3 mnt
    printf '%s\n' "Installing ROOT files."
    [ -d ${ROOTDIR}/var/cache/dnf ] && rm -rf ${ROOTDIR}/var/cache/dnf* ||:
    cp -a ${ROOTDIR}/* ${OURDIR}/mnt/
# EFI is already on separate partition, remove it after copy
    [ -d ${OURDIR}/mnt//boot/efi ] && rm -rf ${OURDIR}/mnt/boot/efi/* ||:
    cat >${OURDIR}/mnt/etc/fstab <<EOF
    UUID=${ROOTUUID}		/		ext4	defaults,noatime	0	1
    UUID=${BOOTUUID}		/boot/efi	vfat	umask=0077	0	2
EOF

# install u-boot loader
    dd if="$OURDIR/$ROOTDIR"/boot/idbloader.img of="${LOOPDEV}" bs=512 seek=64 conv=notrunc

# install u-boot binary data
    dd if="$OURDIR/$ROOTDIR"/boot/u-boot.itb of="${LOOPDEV}p1" bs=512 conv=notrunc

    umount ${OURDIR}/mnt
    losetup -d ${LOOPDEV}
    sync
fi
    printf '%s\n' "Compressing final image."
    xz -9ef ${OURDIR}/results/${BASENAME}.img
